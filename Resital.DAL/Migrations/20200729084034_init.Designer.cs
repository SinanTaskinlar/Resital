// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resital.DAL;

namespace Resital.DAL.Migrations
{
    [DbContext(typeof(ResitalDbContext))]
    [Migration("20200729084034_init")]
    partial class İnit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Resital.Model.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c153ce9d-3708-4471-8c12-fcc77c3a5a12"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3457),
                            Name = "İstanbul"
                        },
                        new
                        {
                            Id = new Guid("e80ffb33-0fe6-48b8-b29b-5fd23bbc31f4"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3744),
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = new Guid("1663e83b-ca62-4183-ac92-d4ce892867f9"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3773),
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = new Guid("cb3e2568-e09f-46c4-9641-b9557b20641e"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3776),
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = new Guid("7ac907a0-d7ff-4778-8a7b-e073019aa3fc"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3782),
                            Name = "Adana"
                        },
                        new
                        {
                            Id = new Guid("62ae5644-5cfd-4cb3-bb98-b33cd595597b"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3785),
                            Name = "Eskişehir"
                        },
                        new
                        {
                            Id = new Guid("b05d243d-21c6-446b-8261-9c7e9760beb4"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3787),
                            Name = "Afyonkarahisar "
                        },
                        new
                        {
                            Id = new Guid("217ccc91-a13e-4965-8988-7e4f3a9e70a4"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3789),
                            Name = "Artvin"
                        },
                        new
                        {
                            Id = new Guid("ee865b66-f513-4dc5-98ea-3cd0e6fdf31d"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3791),
                            Name = "Balıkesir"
                        },
                        new
                        {
                            Id = new Guid("7634d9fd-f7a6-44cd-9190-d8796e77f0fc"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3793),
                            Name = "Bursa"
                        },
                        new
                        {
                            Id = new Guid("aa8a6586-38ae-4d5f-96e3-dfd7f52705e8"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3795),
                            Name = "Çanakkale"
                        },
                        new
                        {
                            Id = new Guid("a90adf12-d9cb-43dc-8bdc-98f070b79a5e"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3797),
                            Name = "Diyarbakır"
                        },
                        new
                        {
                            Id = new Guid("f4203ddb-5565-4827-a786-0309390a6380"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3801),
                            Name = "Edirne"
                        },
                        new
                        {
                            Id = new Guid("6a3504d2-b454-4aff-b23e-65a96f8593fe"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3803),
                            Name = "Kastamonu"
                        },
                        new
                        {
                            Id = new Guid("80815145-a279-49ae-9145-26f564820adb"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3805),
                            Name = "Kütahya"
                        },
                        new
                        {
                            Id = new Guid("d8c823c2-081c-4dd2-a898-e94b63c89ae9"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3807),
                            Name = "Muğla"
                        },
                        new
                        {
                            Id = new Guid("71c2e9a5-b3ea-4108-8f13-448f0280bd06"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3809),
                            Name = "Nevşehir"
                        },
                        new
                        {
                            Id = new Guid("d88a1aa5-1279-43c4-87c5-2ae84a963b40"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3811),
                            Name = "Sinop"
                        },
                        new
                        {
                            Id = new Guid("d2053be5-1a0b-47f5-8862-784f98e2109d"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3812),
                            Name = "Sivas"
                        },
                        new
                        {
                            Id = new Guid("87f23a1c-dc1c-4217-9bbf-3e712e0ed01b"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3814),
                            Name = "Şanlıurfa"
                        },
                        new
                        {
                            Id = new Guid("c48ed081-8adf-4b3a-8b0d-2b09c9e60d6b"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3818),
                            Name = "Tokat"
                        },
                        new
                        {
                            Id = new Guid("6441549a-4f8f-48c0-b916-e7f2ae684bdd"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3820),
                            Name = "Trabzon"
                        },
                        new
                        {
                            Id = new Guid("f35676ba-a3e7-44f5-92b1-acada39683bb"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(3822),
                            Name = "Yozgat"
                        });
                });

            modelBuilder.Entity("Resital.Model.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Resital.Model.CompanyRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RouteId");

                    b.ToTable("CompanyRoutes");
                });

            modelBuilder.Entity("Resital.Model.CompanyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d03d01e6-36b4-4b4b-96a7-117f497e6546"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(2447),
                            TypeName = "Hotel Company"
                        },
                        new
                        {
                            Id = new Guid("ff283664-e78e-43db-9f50-08b45fa1f529"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(2745),
                            TypeName = "Tour Company "
                        },
                        new
                        {
                            Id = new Guid("85cea106-a7d7-4aa3-b865-3024ee1d3447"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(2772),
                            TypeName = "AirPlane Company "
                        },
                        new
                        {
                            Id = new Guid("7ea38dfd-d2d9-4f73-9836-20c646051171"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(2775),
                            TypeName = "Transfer Company "
                        },
                        new
                        {
                            Id = new Guid("eb216a45-5344-4069-b53f-6d5b5055fd5c"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(2777),
                            TypeName = "RentACar Company "
                        },
                        new
                        {
                            Id = new Guid("c77ec791-d7f0-43e7-ba76-e616c18a291b"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(2779),
                            TypeName = "Ship Company "
                        });
                });

            modelBuilder.Entity("Resital.Model.Guide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guides");
                });

            modelBuilder.Entity("Resital.Model.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RoomLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoomLocationId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Resital.Model.RoomLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomLocations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c0c3ad4-dc88-41a3-9690-f7a4c11918cb"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(1467),
                            Name = "DNZ"
                        },
                        new
                        {
                            Id = new Guid("afe7280b-0f43-4b8e-99a4-cd832c861e9b"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(1785),
                            Name = "GNL "
                        },
                        new
                        {
                            Id = new Guid("aa2a0a73-2584-41cd-ba00-459fdb07fb87"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(1805),
                            Name = "PRK "
                        });
                });

            modelBuilder.Entity("Resital.Model.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b841a2dd-b9e4-4385-b5cd-b8c5e58d90a8"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(409),
                            Name = "SGL"
                        },
                        new
                        {
                            Id = new Guid("acbc5bf8-d023-4360-9923-7ee9fac8606c"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(780),
                            Name = "DBL"
                        },
                        new
                        {
                            Id = new Guid("c5acb95d-c734-479e-962e-e944a169c3e5"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(810),
                            Name = "TRP"
                        },
                        new
                        {
                            Id = new Guid("102b1dac-bcf4-459f-9ff8-e04c3af422f8"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(813),
                            Name = "DBL+1"
                        },
                        new
                        {
                            Id = new Guid("7aaeaf3a-1b70-4415-a985-730888350857"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 546, DateTimeKind.Local).AddTicks(815),
                            Name = "TRP+1"
                        });
                });

            modelBuilder.Entity("Resital.Model.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EndLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StartLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EndLocationId");

                    b.HasIndex("StartLocationId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Resital.Model.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Resital.Model.VehicleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("93feff4b-8f80-4e69-ad57-fb4db9029ca5"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 543, DateTimeKind.Local).AddTicks(5188),
                            Name = "Araba"
                        },
                        new
                        {
                            Id = new Guid("a1f321ee-0923-4a5e-8407-519bd3844027"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 544, DateTimeKind.Local).AddTicks(9337),
                            Name = "Uçak"
                        },
                        new
                        {
                            Id = new Guid("a9035bbe-0d10-4ffb-ac85-dc6089536d9c"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 544, DateTimeKind.Local).AddTicks(9409),
                            Name = "Gemi"
                        },
                        new
                        {
                            Id = new Guid("7bba55b1-66d5-42e4-9578-c83ca2badace"),
                            CreatedAt = new DateTime(2020, 7, 29, 11, 40, 34, 544, DateTimeKind.Local).AddTicks(9413),
                            Name = "Otobüs"
                        });
                });

            modelBuilder.Entity("Resital.Model.Company", b =>
                {
                    b.HasOne("Resital.Model.CompanyType", "CompanyType")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Resital.Model.CompanyRoute", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("Resital.Model.Room", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Rooms")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.RoomLocation", "RoomLocation")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomLocationId");

                    b.HasOne("Resital.Model.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId");
                });

            modelBuilder.Entity("Resital.Model.Route", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Routes")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.City", "EndLocation")
                        .WithMany()
                        .HasForeignKey("EndLocationId");

                    b.HasOne("Resital.Model.City", "StartLocation")
                        .WithMany()
                        .HasForeignKey("StartLocationId");
                });

            modelBuilder.Entity("Resital.Model.Vehicle", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Vehicles")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
