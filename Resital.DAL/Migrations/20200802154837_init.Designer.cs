// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resital.DAL;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ResitalDbContext))]
    [Migration("20200802154837_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Resital.Model.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e07d3455-ea3b-453e-9440-7d0c0b97a6a0"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5485),
                            Name = "İstanbul"
                        },
                        new
                        {
                            Id = new Guid("a9c0c698-1028-4a5d-9a97-ff803910e298"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5775),
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = new Guid("e0ecaf1a-de89-4ccc-ab58-b63404f6118b"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5800),
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = new Guid("a1708eaa-69f8-4514-9f0f-8902f91d892a"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5802),
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = new Guid("2a6cceb1-69b2-4803-97f6-fa6fdfccd474"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5804),
                            Name = "Adana"
                        },
                        new
                        {
                            Id = new Guid("e2871ac4-13e5-425f-a562-5ab66971652c"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5806),
                            Name = "Eskişehir"
                        },
                        new
                        {
                            Id = new Guid("45f579c9-e6b9-4404-aa79-4949f753dab3"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5808),
                            Name = "Afyonkarahisar "
                        },
                        new
                        {
                            Id = new Guid("39913100-ad70-4038-9fb9-ab28630b463c"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5815),
                            Name = "Artvin"
                        },
                        new
                        {
                            Id = new Guid("77d9eae3-47f7-442c-a306-e2d3a0fc2213"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5817),
                            Name = "Balıkesir"
                        },
                        new
                        {
                            Id = new Guid("6c8aed9d-1011-4941-8142-4dc482215fc4"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5819),
                            Name = "Bursa"
                        },
                        new
                        {
                            Id = new Guid("f04ecb88-edeb-4d05-81bd-8c51b5eb170e"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5820),
                            Name = "Çanakkale"
                        },
                        new
                        {
                            Id = new Guid("ac1296be-c388-4cc4-9ec5-f76d84636b98"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5822),
                            Name = "Diyarbakır"
                        },
                        new
                        {
                            Id = new Guid("6e4e252f-cf1f-46ea-b0d5-5394e5e0eab9"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5824),
                            Name = "Edirne"
                        },
                        new
                        {
                            Id = new Guid("e7a974dc-a454-4175-9c41-2663b993bb2e"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5826),
                            Name = "Kastamonu"
                        },
                        new
                        {
                            Id = new Guid("10e9d10d-673b-429e-9435-5bb739953355"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5828),
                            Name = "Kütahya"
                        },
                        new
                        {
                            Id = new Guid("fa43fbf3-2afe-453c-bf0e-4ddbe873ac97"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5832),
                            Name = "Muğla"
                        },
                        new
                        {
                            Id = new Guid("e71fc392-c629-46e1-95e3-acb10d608ea9"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5834),
                            Name = "Nevşehir"
                        },
                        new
                        {
                            Id = new Guid("64bf4d54-3aeb-4c4e-b463-020ac82d846d"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5836),
                            Name = "Sinop"
                        },
                        new
                        {
                            Id = new Guid("b6af9d71-03b7-426f-82cc-7af405461e99"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5838),
                            Name = "Sivas"
                        },
                        new
                        {
                            Id = new Guid("e71ca81b-e1c7-4478-aa14-096fe92e33be"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5839),
                            Name = "Şanlıurfa"
                        },
                        new
                        {
                            Id = new Guid("c65c6047-a883-4afb-be5a-1dc08dcbf2ce"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5841),
                            Name = "Tokat"
                        },
                        new
                        {
                            Id = new Guid("6c9acea1-6cd5-49b9-ba9c-001c4d402731"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5843),
                            Name = "Trabzon"
                        },
                        new
                        {
                            Id = new Guid("a0eb6d06-516c-4f50-9df7-7adf0cfa7d5a"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(5845),
                            Name = "Yozgat"
                        });
                });

            modelBuilder.Entity("Resital.Model.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Resital.Model.CompanyRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RouteId");

                    b.ToTable("CompanyRoutes");
                });

            modelBuilder.Entity("Resital.Model.CompanyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85309226-2f5c-4cd4-a16b-36f49884ce7d"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(4552),
                            TypeName = "Hotel Company"
                        },
                        new
                        {
                            Id = new Guid("0981ac6a-1b71-4383-8069-c869ab3836a4"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(4849),
                            TypeName = "Tour Company "
                        },
                        new
                        {
                            Id = new Guid("5a95de08-1def-48a8-9860-69c31aae8a5b"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(4864),
                            TypeName = "AirPlane Company "
                        },
                        new
                        {
                            Id = new Guid("24889c90-8e83-4dbc-a8b7-5dc7480adf5e"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(4867),
                            TypeName = "Transfer Company "
                        },
                        new
                        {
                            Id = new Guid("934b8b43-b22b-424e-84e7-2c1ef79e128f"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(4869),
                            TypeName = "RentACar Company "
                        },
                        new
                        {
                            Id = new Guid("76b15c5f-1137-4851-bd7e-6e4c3005dfac"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(4875),
                            TypeName = "Ship Company "
                        });
                });

            modelBuilder.Entity("Resital.Model.Guide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guides");
                });

            modelBuilder.Entity("Resital.Model.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RoomLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoomLocationId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Resital.Model.RoomLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomLocations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56686cdc-bcd9-4ebb-9f8d-f3e35019b83e"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(3579),
                            Name = "DNZ"
                        },
                        new
                        {
                            Id = new Guid("edd7b919-8bc5-465c-873d-5f2ff48d76c7"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(3892),
                            Name = "GNL "
                        },
                        new
                        {
                            Id = new Guid("b7b5dcf6-0ea1-4e43-a8e1-955fb8ed502b"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(3913),
                            Name = "PRK "
                        });
                });

            modelBuilder.Entity("Resital.Model.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("045c7b52-397b-4d21-bf27-f32532c65d64"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(2512),
                            Name = "SGL"
                        },
                        new
                        {
                            Id = new Guid("44f320c4-1f36-466e-bb87-87a60997663d"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(2880),
                            Name = "DBL"
                        },
                        new
                        {
                            Id = new Guid("36f5c7ac-a3aa-4e99-8300-c096a71bd52d"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(2898),
                            Name = "TRP"
                        },
                        new
                        {
                            Id = new Guid("890caf1c-ff04-499f-8521-ae53cfd209b9"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(2900),
                            Name = "DBL+1"
                        },
                        new
                        {
                            Id = new Guid("57f049e4-e7d3-41f0-bbb8-6c394c8d7f3d"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 308, DateTimeKind.Local).AddTicks(2902),
                            Name = "TRP+1"
                        });
                });

            modelBuilder.Entity("Resital.Model.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EndLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StartLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EndLocationId");

                    b.HasIndex("StartLocationId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Resital.Model.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Resital.Model.VehicleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac938c9f-c404-477e-be67-bf09a5728283"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 305, DateTimeKind.Local).AddTicks(8936),
                            Name = "Araba"
                        },
                        new
                        {
                            Id = new Guid("7e64c8b3-43eb-4ed0-bf3c-59a333e28d82"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 307, DateTimeKind.Local).AddTicks(2576),
                            Name = "Uçak"
                        },
                        new
                        {
                            Id = new Guid("4219ebbf-993b-45ac-bc45-4e83c0e74102"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 307, DateTimeKind.Local).AddTicks(2628),
                            Name = "Gemi"
                        },
                        new
                        {
                            Id = new Guid("7eef288f-c183-4b28-be3a-51783ab02a9e"),
                            CreatedAt = new DateTime(2020, 8, 2, 18, 48, 37, 307, DateTimeKind.Local).AddTicks(2632),
                            Name = "Otobüs"
                        });
                });

            modelBuilder.Entity("Resital.Model.Company", b =>
                {
                    b.HasOne("Resital.Model.CompanyType", "CompanyType")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Resital.Model.CompanyRoute", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("Resital.Model.Room", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Rooms")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.RoomLocation", "RoomLocation")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomLocationId");

                    b.HasOne("Resital.Model.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId");
                });

            modelBuilder.Entity("Resital.Model.Route", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Routes")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.City", "EndLocation")
                        .WithMany()
                        .HasForeignKey("EndLocationId");

                    b.HasOne("Resital.Model.City", "StartLocation")
                        .WithMany()
                        .HasForeignKey("StartLocationId");
                });

            modelBuilder.Entity("Resital.Model.Vehicle", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Vehicles")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
