// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resital.DAL;

namespace Resital.DAL.Migrations
{
    [DbContext(typeof(ResitalDbContext))]
    partial class ResitalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Resital.Model.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f18c8cd4-215f-4194-b4ef-82415501d2c3"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(157),
                            Name = "İstanbul"
                        },
                        new
                        {
                            Id = new Guid("41fa2fcb-f5ff-47b8-bafc-2f153ad56117"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(650),
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = new Guid("8f2ea544-acaa-4a36-a3fa-e866f9726d60"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(669),
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = new Guid("c9478258-56d7-49a1-9cd0-438c55d8c5c4"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(676),
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = new Guid("b3738e56-558a-480d-981e-215d5eecbcfa"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(678),
                            Name = "Adana"
                        },
                        new
                        {
                            Id = new Guid("9c62a3d3-8cca-4d5d-9239-0f046fda6d5d"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(680),
                            Name = "Eskişehir"
                        },
                        new
                        {
                            Id = new Guid("8bad33fa-da3f-4545-9259-7a41a80f42ab"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(682),
                            Name = "Afyonkarahisar "
                        },
                        new
                        {
                            Id = new Guid("696e8e1b-c503-4ec5-a50e-fda24be6240a"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(684),
                            Name = "Artvin"
                        },
                        new
                        {
                            Id = new Guid("9d244412-b276-45b8-8e71-3467cf97a006"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(686),
                            Name = "Balıkesir"
                        },
                        new
                        {
                            Id = new Guid("f2bcce94-ea22-49f4-b04d-b5fe7ccc248e"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(689),
                            Name = "Bursa"
                        },
                        new
                        {
                            Id = new Guid("682087e8-0d26-4c3f-8e9e-c7bdf3a164db"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(691),
                            Name = "Çanakkale"
                        },
                        new
                        {
                            Id = new Guid("399204ff-c5a5-4f0d-8d1e-616f6d5a5dd8"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(696),
                            Name = "Diyarbakır"
                        },
                        new
                        {
                            Id = new Guid("45fa5ea3-02ae-410a-884c-73fc5314eef5"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(698),
                            Name = "Edirne"
                        },
                        new
                        {
                            Id = new Guid("0a62fb86-bfd9-41a0-8f24-965b42616bdf"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(700),
                            Name = "Kastamonu"
                        },
                        new
                        {
                            Id = new Guid("0af25785-2feb-4fe0-9838-093cd956f3f3"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(703),
                            Name = "Kütahya"
                        },
                        new
                        {
                            Id = new Guid("f168a9a0-eedd-4f82-a26d-2a59700c68a1"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(705),
                            Name = "Muğla"
                        },
                        new
                        {
                            Id = new Guid("d0ca1c4d-cdf6-4131-9ce5-7cae50ba5aa6"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(707),
                            Name = "Nevşehir"
                        },
                        new
                        {
                            Id = new Guid("2b7830c8-f41c-453f-aa09-b63a06279600"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(709),
                            Name = "Sinop"
                        },
                        new
                        {
                            Id = new Guid("b7722d28-661d-4e74-8ff0-9d3643fbf938"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(710),
                            Name = "Sivas"
                        },
                        new
                        {
                            Id = new Guid("180706bb-d927-4c80-b9e7-740924d8eafa"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(715),
                            Name = "Şanlıurfa"
                        },
                        new
                        {
                            Id = new Guid("b2ad5115-0ea4-48a0-b6f7-63d6d54d930a"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(717),
                            Name = "Tokat"
                        },
                        new
                        {
                            Id = new Guid("67c22f9d-b57b-4b32-8535-e6d79ad21218"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(719),
                            Name = "Trabzon"
                        },
                        new
                        {
                            Id = new Guid("c7770d5e-c2eb-4a6c-9307-1fa727f10a3e"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 194, DateTimeKind.Local).AddTicks(721),
                            Name = "Yozgat"
                        });
                });

            modelBuilder.Entity("Resital.Model.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Resital.Model.CompanyRegion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RegionId");

                    b.ToTable("CompanyRegions");
                });

            modelBuilder.Entity("Resital.Model.CompanyRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RouteId");

                    b.ToTable("CompanyRoutes");
                });

            modelBuilder.Entity("Resital.Model.CompanyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d447864-3590-4c07-9c57-fe8f2cb8cf20"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(9089),
                            TypeName = "Hotel Company"
                        },
                        new
                        {
                            Id = new Guid("f53fe6fd-7854-4f07-b413-39b5ad759456"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(9406),
                            TypeName = "Tour Company "
                        },
                        new
                        {
                            Id = new Guid("bb092416-4b17-49fa-911a-d5a269be20a3"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(9432),
                            TypeName = "AirPlane Company "
                        },
                        new
                        {
                            Id = new Guid("b9434cfe-bcd1-4f3b-8712-87a724c54a7c"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(9434),
                            TypeName = "Transfer Company "
                        },
                        new
                        {
                            Id = new Guid("d5476bf9-abee-4f41-932b-9ea65ac6f59e"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(9436),
                            TypeName = "RentACar Company "
                        },
                        new
                        {
                            Id = new Guid("69531377-3205-47e9-9c02-e4e4fd2b59b7"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(9493),
                            TypeName = "Ship Company "
                        });
                });

            modelBuilder.Entity("Resital.Model.Guide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guides");
                });

            modelBuilder.Entity("Resital.Model.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb24c16d-ac53-40c2-b8eb-f2d4715eae59"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(4111),
                            Name = "Akdeniz"
                        },
                        new
                        {
                            Id = new Guid("744fd9f0-1729-4d84-8d5d-d1d28f27e933"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(5196),
                            Name = "Doğu Anadolu"
                        },
                        new
                        {
                            Id = new Guid("3ac9c6a8-a5cc-4ccc-bcbf-1de4c9497aae"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(5217),
                            Name = "Ege"
                        },
                        new
                        {
                            Id = new Guid("47892553-aa73-44d2-977e-f944abbbe5ec"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(5220),
                            Name = "Güneydoğu Anadolu"
                        },
                        new
                        {
                            Id = new Guid("2520b464-5bb7-4f40-b47a-d3563e9453a0"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(5222),
                            Name = "İç Anadolu"
                        },
                        new
                        {
                            Id = new Guid("414573ba-125e-4083-bd61-a01cb928c383"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(5224),
                            Name = "Marmara"
                        },
                        new
                        {
                            Id = new Guid("f9fe3b11-c38a-4ec7-b788-c45fdeade220"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(5226),
                            Name = "Karadeniz"
                        },
                        new
                        {
                            Id = new Guid("aaca2287-1c33-4daa-9b0e-802bc9630bed"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(5228),
                            Name = "Yurtdışı"
                        });
                });

            modelBuilder.Entity("Resital.Model.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoomLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoomLocationId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Resital.Model.RoomLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomLocations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d97f7ec-3819-42da-a9d2-d74a8e78e695"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(7901),
                            Name = "DNZ"
                        },
                        new
                        {
                            Id = new Guid("a68b9bd8-45e9-4990-a659-db8d7398d338"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(8222),
                            Name = "GNL "
                        },
                        new
                        {
                            Id = new Guid("33dfb9fb-fe4b-4434-8424-3b9d222fdce8"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(8240),
                            Name = "PRK "
                        });
                });

            modelBuilder.Entity("Resital.Model.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ed77298-cdff-49a7-a685-f8b0c8e8e6f9"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(6831),
                            Name = "SGL"
                        },
                        new
                        {
                            Id = new Guid("485a148d-2b21-4f76-add9-c3c3c5b6be41"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(7177),
                            Name = "DBL"
                        },
                        new
                        {
                            Id = new Guid("5d436b0b-dd53-478b-9f77-186dec81419b"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(7200),
                            Name = "TRP"
                        },
                        new
                        {
                            Id = new Guid("4ba016ff-a14f-49ee-ba25-c44590c39b3b"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(7202),
                            Name = "DBL+1"
                        },
                        new
                        {
                            Id = new Guid("b92f61ff-8c58-4ff6-aab4-51b000d6ae0d"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 193, DateTimeKind.Local).AddTicks(7204),
                            Name = "TRP+1"
                        });
                });

            modelBuilder.Entity("Resital.Model.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EndLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StartLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EndLocationId");

                    b.HasIndex("StartLocationId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Resital.Model.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Resital.Model.VehicleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e196584-17f3-4220-9a1c-f19a6572f931"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 191, DateTimeKind.Local).AddTicks(3636),
                            Name = "Araba"
                        },
                        new
                        {
                            Id = new Guid("ac6a27f6-95a8-4dff-b3d6-159c4436f058"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 192, DateTimeKind.Local).AddTicks(2475),
                            Name = "Uçak"
                        },
                        new
                        {
                            Id = new Guid("8f97e3a7-2745-4cd6-b19f-08fb98f5c14a"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 192, DateTimeKind.Local).AddTicks(2531),
                            Name = "Gemi"
                        },
                        new
                        {
                            Id = new Guid("082f3933-0e96-44a2-8246-37c0d599c046"),
                            CreatedAt = new DateTime(2020, 7, 29, 0, 31, 31, 192, DateTimeKind.Local).AddTicks(2535),
                            Name = "Otobüs"
                        });
                });

            modelBuilder.Entity("Resital.Model.Company", b =>
                {
                    b.HasOne("Resital.Model.CompanyType", "CompanyType")
                        .WithMany()
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Resital.Model.CompanyRegion", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("Resital.Model.CompanyRoute", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("Resital.Model.Room", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Rooms")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.RoomLocation", "RoomLocation")
                        .WithMany()
                        .HasForeignKey("RoomLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resital.Model.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Resital.Model.Route", b =>
                {
                    b.HasOne("Resital.Model.City", "EndLocation")
                        .WithMany()
                        .HasForeignKey("EndLocationId");

                    b.HasOne("Resital.Model.City", "StartLocation")
                        .WithMany()
                        .HasForeignKey("StartLocationId");
                });

            modelBuilder.Entity("Resital.Model.Vehicle", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Vehicles")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
