// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resital.DAL;

namespace Resital.DAL.Migrations
{
    [DbContext(typeof(ResitalDbContext))]
    partial class ResitalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Resital.Model.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("162c75dd-012b-42e2-8035-0bb5ba77b604"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5260),
                            Name = "İstanbul"
                        },
                        new
                        {
                            Id = new Guid("19f85b33-6b07-4fa9-99df-da4a926afcb3"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5718),
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = new Guid("dac56eb4-2476-4c21-9d8f-95a2df6b7d70"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5742),
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = new Guid("aeb91815-8726-4f67-b01b-781f2d22a9a9"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5749),
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = new Guid("15ca0b97-9deb-49e9-b3c2-765d7c868eb6"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5751),
                            Name = "Adana"
                        },
                        new
                        {
                            Id = new Guid("83685720-a498-4155-953d-33ddca8a27e7"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5753),
                            Name = "Eskişehir"
                        },
                        new
                        {
                            Id = new Guid("d1bb95e9-8590-4cf7-ae54-ee891355c400"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5755),
                            Name = "Afyonkarahisar "
                        },
                        new
                        {
                            Id = new Guid("62ee7fcc-3c4f-4334-abd2-506c55576e77"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5757),
                            Name = "Artvin"
                        },
                        new
                        {
                            Id = new Guid("a6a24f85-77df-4cf5-a83c-3dcace9ca079"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5759),
                            Name = "Balıkesir"
                        },
                        new
                        {
                            Id = new Guid("b643f488-77ef-4ed4-a433-751ae2a51cee"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5760),
                            Name = "Bursa"
                        },
                        new
                        {
                            Id = new Guid("117b8984-cb6e-4ff9-be1a-78e8be82a6bb"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5762),
                            Name = "Çanakkale"
                        },
                        new
                        {
                            Id = new Guid("75587eae-db4b-49c8-9392-81eec55df539"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5767),
                            Name = "Diyarbakır"
                        },
                        new
                        {
                            Id = new Guid("7183d86b-99a7-48a9-802c-4eb77c6a20f6"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5769),
                            Name = "Edirne"
                        },
                        new
                        {
                            Id = new Guid("dc9d65f9-a817-47f4-9cca-af508f04fb8f"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5770),
                            Name = "Kastamonu"
                        },
                        new
                        {
                            Id = new Guid("385e48b2-25f9-452e-8c31-6ebc6f785ad4"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5772),
                            Name = "Kütahya"
                        },
                        new
                        {
                            Id = new Guid("719f0beb-0c97-4bed-b9b1-fe7f9c24d32a"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5774),
                            Name = "Muğla"
                        },
                        new
                        {
                            Id = new Guid("18b493ea-a312-4d2c-8db8-fc356ee444ef"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5776),
                            Name = "Nevşehir"
                        },
                        new
                        {
                            Id = new Guid("4e3637c8-244a-4870-bfc7-0efdc9daa340"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5778),
                            Name = "Sinop"
                        },
                        new
                        {
                            Id = new Guid("ce7437b0-9594-4c82-9a91-3305d2e2948c"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5781),
                            Name = "Sivas"
                        },
                        new
                        {
                            Id = new Guid("dedf4022-33ac-4b0e-a849-e490892dfc4e"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5786),
                            Name = "Şanlıurfa"
                        },
                        new
                        {
                            Id = new Guid("b8aa3cd8-ae02-4ab1-a06a-e19f0a9c2ad0"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5789),
                            Name = "Tokat"
                        },
                        new
                        {
                            Id = new Guid("e0250938-6c1c-4954-a830-7aaf0fa973c8"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5791),
                            Name = "Trabzon"
                        },
                        new
                        {
                            Id = new Guid("fef327b9-ad90-4d20-97a1-5a59023fbae7"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(5793),
                            Name = "Yozgat"
                        });
                });

            modelBuilder.Entity("Resital.Model.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Resital.Model.CompanyRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RouteId");

                    b.ToTable("CompanyRoutes");
                });

            modelBuilder.Entity("Resital.Model.CompanyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2dab66e3-fe09-4907-a755-3d8ff26c1e9d"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(4110),
                            TypeName = "Hotel Company"
                        },
                        new
                        {
                            Id = new Guid("3a7de0ab-12fa-49e9-b3f3-f5391a822c98"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(4412),
                            TypeName = "Tour Company "
                        },
                        new
                        {
                            Id = new Guid("22dd934d-eff9-409e-bff6-0149bf905581"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(4429),
                            TypeName = "AirPlane Company "
                        },
                        new
                        {
                            Id = new Guid("e034b9a5-e3cf-4fdb-a584-d320ad79cf7c"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(4432),
                            TypeName = "Transfer Company "
                        },
                        new
                        {
                            Id = new Guid("2637af49-5c00-4cb9-a4e7-91e44ac3926d"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(4434),
                            TypeName = "RentACar Company "
                        },
                        new
                        {
                            Id = new Guid("6089b12d-669b-4b8d-a164-64f2a0427b9b"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(4436),
                            TypeName = "Ship Company "
                        });
                });

            modelBuilder.Entity("Resital.Model.Guide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guides");
                });

            modelBuilder.Entity("Resital.Model.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RoomLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoomLocationId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Resital.Model.RoomLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomLocations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95ace62f-e388-4006-92c1-40a1d196d014"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(3162),
                            Name = "DNZ"
                        },
                        new
                        {
                            Id = new Guid("118bd04d-ad1e-4a85-a4ef-bc8158552d43"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(3474),
                            Name = "GNL "
                        },
                        new
                        {
                            Id = new Guid("1601d15e-6a3f-4360-ac5b-f413cd3083d8"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(3497),
                            Name = "PRK "
                        });
                });

            modelBuilder.Entity("Resital.Model.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbf8b885-57a6-4df0-99bd-da5902bb88b9"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(2132),
                            Name = "SGL"
                        },
                        new
                        {
                            Id = new Guid("a8dc58c3-8fc2-4a1d-a7b6-5bf6ba07667f"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(2509),
                            Name = "DBL"
                        },
                        new
                        {
                            Id = new Guid("5e86dc0b-08eb-499d-8e79-82757183e16b"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(2527),
                            Name = "TRP"
                        },
                        new
                        {
                            Id = new Guid("3530fd0f-8e91-4944-a685-de4d78891cbd"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(2529),
                            Name = "DBL+1"
                        },
                        new
                        {
                            Id = new Guid("09021fcf-8e23-42fe-b931-5fb5c7e46205"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 276, DateTimeKind.Local).AddTicks(2531),
                            Name = "TRP+1"
                        });
                });

            modelBuilder.Entity("Resital.Model.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EndLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StartLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EndLocationId");

                    b.HasIndex("StartLocationId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Resital.Model.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Resital.Model.VehicleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4ffd3cd-63a1-40ae-9186-43de77bd27c0"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 273, DateTimeKind.Local).AddTicks(9014),
                            Name = "Araba"
                        },
                        new
                        {
                            Id = new Guid("5683445c-b07e-4e36-afa4-f118593a2a75"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 275, DateTimeKind.Local).AddTicks(2140),
                            Name = "Uçak"
                        },
                        new
                        {
                            Id = new Guid("fbbc79bc-4845-49d3-b2ba-2c87f1582da7"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 275, DateTimeKind.Local).AddTicks(2194),
                            Name = "Gemi"
                        },
                        new
                        {
                            Id = new Guid("5f623b38-8f77-4c03-89f7-5a0d02462725"),
                            CreatedAt = new DateTime(2020, 8, 1, 16, 19, 33, 275, DateTimeKind.Local).AddTicks(2197),
                            Name = "Otobüs"
                        });
                });

            modelBuilder.Entity("Resital.Model.Company", b =>
                {
                    b.HasOne("Resital.Model.CompanyType", "CompanyType")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Resital.Model.CompanyRoute", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("Resital.Model.Room", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Rooms")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.RoomLocation", "RoomLocation")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomLocationId");

                    b.HasOne("Resital.Model.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId");
                });

            modelBuilder.Entity("Resital.Model.Route", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Routes")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.City", "EndLocation")
                        .WithMany()
                        .HasForeignKey("EndLocationId");

                    b.HasOne("Resital.Model.City", "StartLocation")
                        .WithMany()
                        .HasForeignKey("StartLocationId");
                });

            modelBuilder.Entity("Resital.Model.Vehicle", b =>
                {
                    b.HasOne("Resital.Model.Company", "Company")
                        .WithMany("Vehicles")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Resital.Model.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
